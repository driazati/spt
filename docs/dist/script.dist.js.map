{
  "version": 3,
  "sources": ["../../node_modules/preact/src/util.js", "../../node_modules/preact/src/options.js", "../../node_modules/preact/src/create-element.js", "../../node_modules/preact/src/component.js", "../../node_modules/preact/src/create-context.js", "../../node_modules/preact/src/constants.js", "../../node_modules/preact/src/diff/children.js", "../../node_modules/preact/src/diff/props.js", "../../node_modules/preact/src/diff/index.js", "../../node_modules/preact/src/render.js", "../../node_modules/preact/src/clone-element.js", "../../node_modules/preact/src/diff/catch-error.js", "../../node_modules/fast-deep-equal/es6/index.js", "../../node_modules/preact/hooks/src/index.js", "../../node_modules/preact/compat/src/util.js", "../../node_modules/preact/compat/src/PureComponent.js", "../../node_modules/preact/compat/src/memo.js", "../../node_modules/preact/compat/src/forwardRef.js", "../../node_modules/preact/compat/src/Children.js", "../../node_modules/preact/compat/src/suspense.js", "../../node_modules/preact/compat/src/suspense-list.js", "../../node_modules/preact/compat/src/portals.js", "../../node_modules/preact/compat/src/render.js", "../../node_modules/preact/compat/src/index.js", "../../node_modules/immer/src/utils/errors.ts", "../../node_modules/immer/src/utils/common.ts", "../../node_modules/immer/src/utils/plugins.ts", "../../node_modules/immer/src/core/scope.ts", "../../node_modules/immer/src/core/finalize.ts", "../../node_modules/immer/src/core/proxy.ts", "../../node_modules/immer/src/core/immerClass.ts", "../../node_modules/immer/src/core/current.ts", "../../node_modules/immer/src/plugins/es5.ts", "../../node_modules/immer/src/plugins/patches.ts", "../../node_modules/immer/src/plugins/mapset.ts", "../../node_modules/immer/src/plugins/all.ts", "../../node_modules/immer/src/immer.ts", "../../node_modules/immer/src/utils/env.ts", "../../node_modules/pullstate/dist/index.es.js", "../../js/state.jsx", "../../js/utils.js", "../../js/auth.jsx", "../../js/script.jsx", "../../js/usage.jsx", "../../js/selector.jsx", "../../js/consumer.jsx"],
  "sourcesContent": ["import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || setTimeout)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tconst prevScu = currentComponent.shouldComponentUpdate;\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\tcurrentComponent.shouldComponentUpdate = function(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/**\n * Check if two values are the same value\n * @param {*} x\n * @param {*} y\n * @returns {boolean}\n */\nexport function is(x, y) {\n\treturn (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function(vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function() {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props._vnode) {\n\t\tif (!_this._temp) {\n\t\t\t_this._container = container;\n\n\t\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t\t_this._temp = {\n\t\t\t\tnodeType: 1,\n\t\t\t\tparentNode: container,\n\t\t\t\tchildNodes: [],\n\t\t\t\tappendChild(child) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tinsertBefore(child, before) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tremoveChild(child) {\n\t\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t\t_this._container.removeChild(child);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Render our wrapping element into temp.\n\t\trender(\n\t\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t\t_this._temp\n\t\t);\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._temp) {\n\t\t_this.componentWillUnmount();\n\t}\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\tconst el = createElement(Portal, { _vnode: vnode, _container: container });\n\tel.containerInfo = container;\n\treturn el;\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\n\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/i\n\t\t: /fil|che|ra/i\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\tlet normalizedProps = props;\n\n\t// only normalize props on Element nodes\n\tif (typeof type === 'string') {\n\t\tconst nonCustomElement = type.indexOf('-') === -1;\n\t\tnormalizedProps = {};\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\n\t\t\tif (IS_DOM && i === 'children' && type === 'noscript') {\n\t\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t\tcontinue;\n\t\t\t} else if (i === 'value' && 'defaultValue' in props && value == null) {\n\t\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t\t// a default value\n\t\t\t\tcontinue;\n\t\t\t} else if (\n\t\t\t\ti === 'defaultValue' &&\n\t\t\t\t'value' in props &&\n\t\t\t\tprops.value == null\n\t\t\t) {\n\t\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\t\ti = 'value';\n\t\t\t} else if (i === 'download' && value === true) {\n\t\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t\t// value will be used as the file name and the file will be called\n\t\t\t\t// \"true\" upon downloading it.\n\t\t\t\tvalue = '';\n\t\t\t} else if (/ondoubleclick/i.test(i)) {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\t/^onchange(textarea|input)/i.test(i + type) &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\ti = 'oninput';\n\t\t\t} else if (/^onfocus$/i.test(i)) {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (/^onblur$/i.test(i)) {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t} else if (nonCustomElement && CAMEL_PROPS.test(i)) {\n\t\t\t\ti = i.replace(/[A-Z0-9]/g, '-$&').toLowerCase();\n\t\t\t} else if (value === null) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\n\t\t\t// Add support for onInput and onChange, see #3561\n\t\t\t// if we have an oninput prop already change it to oninputCapture\n\t\t\tif (/^oninput$/i.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t\tif (normalizedProps[i]) {\n\t\t\t\t\ti = 'oninputCapture';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnormalizedProps[i] = value;\n\t\t}\n\n\t\t// Add support for array select values: <select multiple value={[]} />\n\t\tif (\n\t\t\ttype == 'select' &&\n\t\t\tnormalizedProps.multiple &&\n\t\t\tArray.isArray(normalizedProps.value)\n\t\t) {\n\t\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t\t});\n\t\t}\n\n\t\t// Adding support for defaultValue in select tag\n\t\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tif (normalizedProps.multiple) {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t\t} else {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvnode.props = normalizedProps;\n\n\t\tif (props.class != props.className) {\n\t\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\t\tif (props.className != null) normalizedProps.class = props.className;\n\t\t\tObject.defineProperty(normalizedProps, 'className', classNameDescriptor);\n\t\t}\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function(vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport { is } from './util';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '17.0.2'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional arugment that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\nexport function startTransition(cb) {\n\tcb();\n}\n\nexport function useDeferredValue(val) {\n\treturn val;\n}\n\nexport function useTransition() {\n\treturn [false, startTransition];\n}\n\n// TODO: in theory this should be done after a VNode is diffed as we want to insert\n// styles/... before it attaches\nexport const useInsertionEffect = useLayoutEffect;\n\n/**\n * This is taken from https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js#L84\n * on a high level this cuts out the warnings, ... and attempts a smaller implementation\n */\nexport function useSyncExternalStore(subscribe, getSnapshot) {\n\tconst value = getSnapshot();\n\n\tconst [{ _instance }, forceUpdate] = useState({\n\t\t_instance: { _value: value, _getSnapshot: getSnapshot }\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t_instance._value = value;\n\t\t_instance._getSnapshot = getSnapshot;\n\n\t\tif (!is(_instance._value, getSnapshot())) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\t}, [subscribe, value, getSnapshot]);\n\n\tuseEffect(() => {\n\t\tif (!is(_instance._value, _instance._getSnapshot())) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\n\t\treturn subscribe(() => {\n\t\t\tif (!is(_instance._value, _instance._getSnapshot())) {\n\t\t\t\tforceUpdate({ _instance });\n\t\t\t}\n\t\t});\n\t}, [subscribe]);\n\n\treturn value;\n}\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseInsertionEffect,\n\tuseTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tstartTransition,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n", "const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n", "import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n", "import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n", "import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n", "import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ProxyType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n", "import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n", "import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n", "import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n", "import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (!draft_.hasOwnProperty(i)) {\n\t\t\t\t\tassigned_[i] = true\n\t\t\t\t}\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\t// last descriptor can be not a trap, if the array was extended\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// if we miss a property, it has been deleted, so array probobaly changed\n\t\tfor (let i = 0; i < draft_.length; i++) {\n\t\t\tif (!draft_.hasOwnProperty(i)) return true\n\t\t}\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n", "import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyType,\n\tArchtype,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyType.ProxyObject:\n\t\t\tcase ProxyType.ES5Object:\n\t\t\tcase ProxyType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyType.ES5Array:\n\t\t\tcase ProxyType.ProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tlet p = path[i]\n\t\t\t\tif (typeof p !== \"string\" && typeof p !== \"number\") {\n\t\t\t\t\tp = \"\" + p\n\t\t\t\t}\n\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === Archtype.Object || parentType === Archtype.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(24)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\") die(24)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n", "// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyType,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n", "import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n", "import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n", "// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n", "import isEqual from'fast-deep-equal/es6';import React,{useRef,useState,useEffect,useContext}from'preact/compat';import produce$1,{enablePatches,applyPatches,produce,produceWithPatches}from'immer';function useStoreState(store, getSubState, deps) {\r\n    const updateRef = useRef({ state: undefined, initialized: false });\r\n    if (!updateRef.current.initialized) {\r\n        updateRef.current.state = getSubState ? getSubState(store.getRawState()) : store.getRawState();\r\n        updateRef.current.initialized = true;\r\n    }\r\n    const [, setUpdateTrigger] = useState(0);\r\n    useEffect(() => {\r\n        const effectState = { shouldUpdate: true };\r\n        function update() {\r\n            if (effectState.shouldUpdate) {\r\n                const nextSubState = getSubState\r\n                    ? getSubState(store.getRawState())\r\n                    : store.getRawState();\r\n                if (!isEqual(updateRef.current.state, nextSubState)) {\r\n                    if (effectState.shouldUpdate) {\r\n                        updateRef.current.state = nextSubState;\r\n                        setUpdateTrigger((val) => val + 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        store._addUpdateListener(update);\r\n        update();\r\n        return () => {\r\n            effectState.shouldUpdate = false;\r\n            store._removeUpdateListener(update);\r\n        };\r\n    }, deps !== null && deps !== void 0 ? deps : []);\r\n    if (deps !== undefined) {\r\n        const prevDeps = useRef(deps);\r\n        if (!isEqual(deps, prevDeps)) {\r\n            updateRef.current.state = getSubState(store.getRawState());\r\n        }\r\n    }\r\n    return updateRef.current.state;\r\n}function useLocalStore(initialState, deps) {\r\n    const storeRef = useRef();\r\n    if (storeRef.current == null) {\r\n        storeRef.current = new Store(initialState);\r\n    }\r\n    if (deps !== undefined) {\r\n        const prevDeps = useRef(deps);\r\n        if (!isEqual(deps, prevDeps)) {\r\n            storeRef.current = new Store(initialState);\r\n        }\r\n    }\r\n    return storeRef.current;\r\n}const globalClientState = {\r\n    storeOrdinal: 0,\r\n    batching: false,\r\n    flushStores: {}\r\n};enablePatches();\r\nfunction makeSubscriptionFunction(store, watch, listener) {\r\n    let lastWatchState = watch(store.getRawState());\r\n    return () => {\r\n        const currentState = store.getRawState();\r\n        const nextWatchState = watch(currentState);\r\n        if (!isEqual(nextWatchState, lastWatchState)) {\r\n            listener(nextWatchState, currentState, lastWatchState);\r\n            lastWatchState = nextWatchState;\r\n        }\r\n    };\r\n}\r\nfunction makeReactionFunctionCreator(watch, reaction) {\r\n    return (store) => {\r\n        let lastWatchState = watch(store.getRawState());\r\n        return (forceRun = false) => {\r\n            const currentState = store.getRawState();\r\n            const nextWatchState = watch(currentState);\r\n            if (forceRun || !isEqual(nextWatchState, lastWatchState)) {\r\n                if (store._optListenerCount > 0) {\r\n                    const [nextState, patches, inversePatches] = produceWithPatches(currentState, (s) => reaction(nextWatchState, s, currentState, lastWatchState));\r\n                    store._updateStateWithoutReaction(nextState);\r\n                    lastWatchState = nextWatchState;\r\n                    if (patches.length > 0) {\r\n                        store._patchListeners.forEach((listener) => listener(patches, inversePatches));\r\n                        return Object.keys(getChangedPathsFromPatches(patches));\r\n                    }\r\n                }\r\n                else {\r\n                    if (store._patchListeners.length > 0) {\r\n                        const [nextState, patches, inversePatches] = produceWithPatches(currentState, (s) => reaction(nextWatchState, s, currentState, lastWatchState));\r\n                        if (patches.length > 0) {\r\n                            store._patchListeners.forEach((listener) => listener(patches, inversePatches));\r\n                        }\r\n                        store._updateStateWithoutReaction(nextState);\r\n                    }\r\n                    else {\r\n                        store._updateStateWithoutReaction(produce(currentState, (s) => reaction(nextWatchState, s, currentState, lastWatchState)));\r\n                    }\r\n                    lastWatchState = nextWatchState;\r\n                }\r\n            }\r\n            return [];\r\n        };\r\n    };\r\n}\r\nconst optPathDivider = \"~._.~\";\r\nclass Store {\r\n    constructor(initialState) {\r\n        this.updateListeners = [];\r\n        this.ssr = false;\r\n        this.reactions = [];\r\n        this.clientSubscriptions = [];\r\n        this.reactionCreators = [];\r\n        this.optimizedUpdateListeners = {};\r\n        this.optimizedUpdateListenerPaths = {};\r\n        this.optimizedListenerPropertyMap = {};\r\n        this._optListenerCount = 0;\r\n        this._patchListeners = [];\r\n        if (initialState instanceof Function) {\r\n            const state = initialState();\r\n            this.currentState = state;\r\n            this.initialState = state;\r\n            this.createInitialState = initialState;\r\n        }\r\n        else {\r\n            this.currentState = initialState;\r\n            this.initialState = initialState;\r\n            this.createInitialState = () => initialState;\r\n        }\r\n        this.internalOrdId = globalClientState.storeOrdinal++;\r\n    }\r\n    _setInternalOptions({ ssr, reactionCreators = [] }) {\r\n        this.ssr = ssr;\r\n        this.reactionCreators = reactionCreators;\r\n        this.reactions = reactionCreators.map((rc) => rc(this));\r\n    }\r\n    _getReactionCreators() {\r\n        return this.reactionCreators;\r\n    }\r\n    _instantiateReactions() {\r\n        this.reactions = this.reactionCreators.map((rc) => rc(this));\r\n    }\r\n    _getInitialState() {\r\n        return this.createInitialState();\r\n    }\r\n    _updateStateWithoutReaction(nextState) {\r\n        this.currentState = nextState;\r\n    }\r\n    _updateState(nextState, updateKeyedPaths = []) {\r\n        this.currentState = nextState;\r\n        this.batchState = undefined;\r\n        for (const runReaction of this.reactions) {\r\n            updateKeyedPaths.push(...runReaction());\r\n        }\r\n        if (!this.ssr) {\r\n            for (const runSubscription of this.clientSubscriptions) {\r\n                runSubscription();\r\n            }\r\n            if (updateKeyedPaths.length > 0) {\r\n                const updateOrds = new Set();\r\n                for (const keyedPath of updateKeyedPaths) {\r\n                    if (this.optimizedListenerPropertyMap[keyedPath]) {\r\n                        for (const ord of this.optimizedListenerPropertyMap[keyedPath]) {\r\n                            updateOrds.add(ord);\r\n                        }\r\n                    }\r\n                }\r\n                for (const ord of updateOrds.values()) {\r\n                    if (this.optimizedUpdateListeners[ord]) {\r\n                        this.optimizedUpdateListeners[ord]();\r\n                    }\r\n                }\r\n            }\r\n            this.updateListeners.forEach((listener) => listener());\r\n        }\r\n    }\r\n    _addUpdateListener(listener) {\r\n        this.updateListeners.push(listener);\r\n    }\r\n    _removeUpdateListener(listener) {\r\n        this.updateListeners = this.updateListeners.filter((f) => f !== listener);\r\n    }\r\n    _removeUpdateListenerOpt(ordKey) {\r\n        const listenerPathsKeyed = this.optimizedUpdateListenerPaths[ordKey];\r\n        for (const keyedPath of listenerPathsKeyed) {\r\n            this.optimizedListenerPropertyMap[keyedPath] = this.optimizedListenerPropertyMap[keyedPath].filter((ord) => ord !== ordKey);\r\n        }\r\n        delete this.optimizedUpdateListenerPaths[ordKey];\r\n        delete this.optimizedUpdateListeners[ordKey];\r\n        this._optListenerCount--;\r\n    }\r\n    listenToPatches(patchListener) {\r\n        this._patchListeners.push(patchListener);\r\n        return () => {\r\n            this._patchListeners = this._patchListeners.filter((f) => f !== patchListener);\r\n        };\r\n    }\r\n    subscribe(watch, listener) {\r\n        if (!this.ssr) {\r\n            const func = makeSubscriptionFunction(this, watch, listener);\r\n            this.clientSubscriptions.push(func);\r\n            return () => {\r\n                this.clientSubscriptions = this.clientSubscriptions.filter((f) => f !== func);\r\n            };\r\n        }\r\n        return () => {\r\n            console.warn(`Pullstate: Subscriptions made on the server side are not registered - so therefor this call to unsubscribe does nothing.`);\r\n        };\r\n    }\r\n    createReaction(watch, reaction, { runNow = false, runNowWithSideEffects = false } = {}) {\r\n        const creator = makeReactionFunctionCreator(watch, reaction);\r\n        this.reactionCreators.push(creator);\r\n        const func = creator(this);\r\n        this.reactions.push(func);\r\n        if (runNow || runNowWithSideEffects) {\r\n            func(true);\r\n            if (runNowWithSideEffects && !this.ssr) {\r\n                this._updateState(this.currentState);\r\n            }\r\n        }\r\n        return () => {\r\n            this.reactions = this.reactions.filter((f) => f !== func);\r\n        };\r\n    }\r\n    getRawState() {\r\n        if (this.batchState !== undefined) {\r\n            return this.batchState;\r\n        }\r\n        else {\r\n            return this.currentState;\r\n        }\r\n    }\r\n    useState(getSubState, deps) {\r\n        return useStoreState(this, getSubState, deps);\r\n    }\r\n    useLocalCopyInitial(deps) {\r\n        return useLocalStore(this.createInitialState, deps);\r\n    }\r\n    useLocalCopySnapshot(deps) {\r\n        return useLocalStore(this.currentState, deps);\r\n    }\r\n    flushBatch(ignoreError = false) {\r\n        if (this.batchState !== undefined) {\r\n            if (this.batchState !== this.currentState) {\r\n                this._updateState(this.batchState);\r\n            }\r\n        }\r\n        else if (!ignoreError) {\r\n            console.error(`Pullstate: Trying to flush batch state which was never created or updated on`);\r\n        }\r\n        this.batchState = undefined;\r\n    }\r\n    update(updater, patchesCallback) {\r\n        if (globalClientState.batching) {\r\n            if (this.batchState === undefined) {\r\n                this.batchState = this.currentState;\r\n                globalClientState.flushStores[this.internalOrdId] = this;\r\n            }\r\n            const func = typeof updater === \"function\";\r\n            const [nextState, patches, inversePatches] = runUpdates(this.batchState, updater, func);\r\n            if (patches.length > 0 && (this._patchListeners.length > 0 || patchesCallback)) {\r\n                if (patchesCallback) {\r\n                    patchesCallback(patches, inversePatches);\r\n                }\r\n                this._patchListeners.forEach((listener) => listener(patches, inversePatches));\r\n            }\r\n            this.batchState = nextState;\r\n        }\r\n        else {\r\n            this.batchState = undefined;\r\n            update(this, updater, patchesCallback);\r\n        }\r\n    }\r\n    replace(newState) {\r\n        this._updateState(newState);\r\n    }\r\n    replaceFromCurrent(replacer) {\r\n        this._updateState(replacer(this.currentState));\r\n    }\r\n    applyPatches(patches) {\r\n        applyPatchesToStore(this, patches);\r\n    }\r\n}\r\nfunction applyPatchesToStore(store, patches) {\r\n    const currentState = store.getRawState();\r\n    const nextState = applyPatches(currentState, patches);\r\n    if (nextState !== currentState) {\r\n        store._updateState(nextState, Object.keys(getChangedPathsFromPatches(patches)));\r\n    }\r\n}\r\nfunction getChangedPathsFromPatches(changePatches, prev = {}) {\r\n    for (const patch of changePatches) {\r\n        let curKey;\r\n        for (const p of patch.path) {\r\n            if (curKey) {\r\n                curKey = `${curKey}${optPathDivider}${p}`;\r\n            }\r\n            else {\r\n                curKey = p;\r\n            }\r\n            prev[curKey] = 1;\r\n        }\r\n    }\r\n    return prev;\r\n}\r\nfunction runUpdates(currentState, updater, func) {\r\n    return func\r\n        ? produceWithPatches(currentState, (s) => updater(s, currentState))\r\n        : updater.reduce(([nextState, patches, inversePatches], currentValue) => {\r\n            const resp = produceWithPatches(nextState, (s) => currentValue(s, nextState));\r\n            patches.push(...resp[1]);\r\n            inversePatches.push(...resp[2]);\r\n            return [resp[0], patches, inversePatches];\r\n        }, [currentState, [], []]);\r\n}\r\nfunction update(store, updater, patchesCallback) {\r\n    const currentState = store.getRawState();\r\n    const func = typeof updater === \"function\";\r\n    if (store._optListenerCount > 0) {\r\n        const [nextState, patches, inversePatches] = runUpdates(currentState, updater, func);\r\n        if (patches.length > 0) {\r\n            if (patchesCallback) {\r\n                patchesCallback(patches, inversePatches);\r\n            }\r\n            store._patchListeners.forEach((listener) => listener(patches, inversePatches));\r\n            store._updateState(nextState, Object.keys(getChangedPathsFromPatches(patches)));\r\n        }\r\n    }\r\n    else {\r\n        let nextState;\r\n        if (store._patchListeners.length > 0 || patchesCallback) {\r\n            const [ns, patches, inversePatches] = runUpdates(currentState, updater, func);\r\n            if (patches.length > 0) {\r\n                if (patchesCallback) {\r\n                    patchesCallback(patches, inversePatches);\r\n                }\r\n                store._patchListeners.forEach((listener) => listener(patches, inversePatches));\r\n            }\r\n            nextState = ns;\r\n        }\r\n        else {\r\n            nextState = produce(currentState, (s) => func\r\n                ? updater(s, currentState)\r\n                : updater.reduce((previousValue, currentUpdater) => {\r\n                    return produce(previousValue, (s) => currentUpdater(s, previousValue));\r\n                }, currentState));\r\n        }\r\n        if (nextState !== currentState) {\r\n            store._updateState(nextState);\r\n        }\r\n    }\r\n}function InjectStoreState({ store, on = s => s, children, }) {\r\n    const state = useStoreState(store, on);\r\n    return children(state);\r\n}var EAsyncEndTags;\r\n(function (EAsyncEndTags) {\r\n    EAsyncEndTags[\"THREW_ERROR\"] = \"THREW_ERROR\";\r\n    EAsyncEndTags[\"RETURNED_ERROR\"] = \"RETURNED_ERROR\";\r\n    EAsyncEndTags[\"UNFINISHED\"] = \"UNFINISHED\";\r\n    EAsyncEndTags[\"DORMANT\"] = \"DORMANT\";\r\n})(EAsyncEndTags || (EAsyncEndTags = {}));\r\nvar EPostActionContext;\r\n(function (EPostActionContext) {\r\n    EPostActionContext[\"WATCH_HIT_CACHE\"] = \"WATCH_HIT_CACHE\";\r\n    EPostActionContext[\"BECKON_HIT_CACHE\"] = \"BECKON_HIT_CACHE\";\r\n    EPostActionContext[\"RUN_HIT_CACHE\"] = \"RUN_HIT_CACHE\";\r\n    EPostActionContext[\"READ_HIT_CACHE\"] = \"READ_HIT_CACHE\";\r\n    EPostActionContext[\"READ_RUN\"] = \"READ_RUN\";\r\n    EPostActionContext[\"SHORT_CIRCUIT\"] = \"SHORT_CIRCUIT\";\r\n    EPostActionContext[\"DIRECT_RUN\"] = \"DIRECT_RUN\";\r\n    EPostActionContext[\"BECKON_RUN\"] = \"BECKON_RUN\";\r\n    EPostActionContext[\"CACHE_UPDATE\"] = \"CACHE_UPDATE\";\r\n})(EPostActionContext || (EPostActionContext = {}));const clientAsyncCache = {\r\n    listeners: {},\r\n    results: {},\r\n    actions: {},\r\n    actionOrd: {}\r\n};\r\nlet asyncCreationOrdinal = 0;\r\nfunction keyFromObject(json) {\r\n    if (json === null) {\r\n        return \"(n)\";\r\n    }\r\n    const typeOf = typeof json;\r\n    if (typeOf !== \"object\") {\r\n        if (typeOf === \"undefined\") {\r\n            return \"(u)\";\r\n        }\r\n        else if (typeOf === \"string\") {\r\n            return \":\" + json + \";\";\r\n        }\r\n        else if (typeOf === \"boolean\" || typeOf === \"number\") {\r\n            return \"(\" + json + \")\";\r\n        }\r\n    }\r\n    let prefix = \"{\";\r\n    for (const key of Object.keys(json).sort()) {\r\n        prefix += key + keyFromObject(json[key]);\r\n    }\r\n    return prefix + \"}\";\r\n}\r\nfunction notifyListeners(key) {\r\n    if (clientAsyncCache.listeners.hasOwnProperty(key)) {\r\n        for (const watchId of Object.keys(clientAsyncCache.listeners[key])) {\r\n            clientAsyncCache.listeners[key][watchId]();\r\n        }\r\n    }\r\n}\r\nfunction clearActionCache(key, clearPending = true, notify = true) {\r\n    if (clearPending && clientAsyncCache.actionOrd.hasOwnProperty(key)) {\r\n        clientAsyncCache.actionOrd[key] += 1;\r\n    }\r\n    delete clientAsyncCache.results[key];\r\n    if (notify) {\r\n        notifyListeners(key);\r\n    }\r\n}\r\nfunction actionOrdUpdate(cache, key) {\r\n    if (!cache.actionOrd.hasOwnProperty(key)) {\r\n        cache.actionOrd[key] = 0;\r\n    }\r\n    else {\r\n        cache.actionOrd[key] += 1;\r\n    }\r\n    return cache.actionOrd[key];\r\n}\r\nfunction successResult(payload = null, tags = [], message = \"\") {\r\n    return {\r\n        payload,\r\n        tags,\r\n        message,\r\n        error: false,\r\n        errorPayload: null\r\n    };\r\n}\r\nfunction errorResult(tags = [], message = \"\", errorPayload) {\r\n    return {\r\n        payload: null,\r\n        tags: [EAsyncEndTags.RETURNED_ERROR, ...tags],\r\n        message,\r\n        error: true,\r\n        errorPayload: errorPayload\r\n    };\r\n}\r\nclass PullstateAsyncError extends Error {\r\n    constructor(message, tags) {\r\n        super(message);\r\n        this.tags = tags;\r\n    }\r\n}\r\nlet storeErrorProxy;\r\ntry {\r\n    storeErrorProxy = new Proxy({}, {\r\n        get: function (obj, prop) {\r\n            throw new Error(`Pullstate: Trying to access store (${String(prop)}) inside async actions without the correct usage or setup.\r\nIf this error occurred on the server:\r\n* If using run(), make use of your created instance for this request: instance.runAsyncAction()\r\n* If using read(), useWatch(), useBeckon() etc. - make sure you have properly set up your <PullstateProvider/>\r\n\r\nIf this error occurred on the client:\r\n* Make sure you have created your \"pullstateCore\" object with all your stores, using createPullstateCore(), and are making use of instantiate() before rendering.`);\r\n        }\r\n    });\r\n}\r\ncatch {\r\n    storeErrorProxy = {};\r\n}\r\nconst startedButUnfinishedResult = [\r\n    true,\r\n    false,\r\n    {\r\n        message: \"\",\r\n        tags: [EAsyncEndTags.UNFINISHED],\r\n        error: true,\r\n        payload: null,\r\n        errorPayload: null\r\n    },\r\n    false,\r\n    -1\r\n];\r\nfunction createAsyncActionDirect(action, options = {}) {\r\n    return createAsyncAction(async (args, stores, customContext) => {\r\n        return successResult(await action(args, stores, customContext));\r\n    }, options);\r\n}\r\nfunction convertCustomCacheBreakHook(cacheBreakHook) {\r\n    if (cacheBreakHook != null) {\r\n        if (typeof cacheBreakHook === \"boolean\") {\r\n            return () => cacheBreakHook;\r\n        }\r\n        else if (typeof cacheBreakHook === \"number\") {\r\n            return ({ timeCached, result }) => {\r\n                if (!result.error) {\r\n                    return Date.now() - timeCached > cacheBreakHook;\r\n                }\r\n                return true;\r\n            };\r\n        }\r\n        return cacheBreakHook;\r\n    }\r\n    return undefined;\r\n}\r\nfunction createAsyncAction(action, { forceContext = false, shortCircuitHook, cacheBreakHook, postActionHook, subsetKey, actionId } = {}) {\r\n    const ordinal = actionId != null ? `_${actionId}` : asyncCreationOrdinal++;\r\n    const onServer = typeof window === \"undefined\";\r\n    function _createKey(args, customKey) {\r\n        if (customKey != null) {\r\n            return `${ordinal}-c-${customKey}`;\r\n        }\r\n        if (subsetKey !== undefined) {\r\n            return `${ordinal}-${keyFromObject(subsetKey(args))}`;\r\n        }\r\n        return `${ordinal}-${keyFromObject(args)}`;\r\n    }\r\n    const deferWaitingKey = `def_wait_${_createKey({})}`;\r\n    let cacheBreakWatcher = {};\r\n    let watchIdOrd = 0;\r\n    const shouldUpdate = {};\r\n    function runPostActionHook(result, args, stores, context) {\r\n        if (postActionHook !== undefined) {\r\n            postActionHook({ args, result, stores, context });\r\n        }\r\n    }\r\n    function getCachedResult({ args, cache, cacheBreakEnabled, context, fromListener, key, postActionEnabled, stores, customCacheBreak }) {\r\n        const useCacheBreakHook = customCacheBreak !== null && customCacheBreak !== void 0 ? customCacheBreak : cacheBreakHook;\r\n        if (cache.results.hasOwnProperty(key)) {\r\n            const cacheBreakLoop = cacheBreakWatcher.hasOwnProperty(key) && cacheBreakWatcher[key] > 2;\r\n            if (!onServer &&\r\n                !fromListener &&\r\n                cacheBreakEnabled &&\r\n                useCacheBreakHook != null\r\n                && cache.results[key][1] &&\r\n                useCacheBreakHook({\r\n                    args,\r\n                    result: cache.results[key][2],\r\n                    stores,\r\n                    timeCached: cache.results[key][4]\r\n                }) &&\r\n                !cacheBreakLoop) {\r\n                if (cacheBreakWatcher.hasOwnProperty(key)) {\r\n                    cacheBreakWatcher[key]++;\r\n                }\r\n                else {\r\n                    cacheBreakWatcher[key] = 1;\r\n                }\r\n                const previous = cache.results[key];\r\n                delete cache.results[key];\r\n                return { cacheBroke: true, response: undefined, previous };\r\n            }\r\n            else {\r\n                if (cacheBreakLoop) {\r\n                    console.error(`[${key}] Pullstate detected an infinite loop caused by cacheBreakHook()\r\nreturning true too often (breaking cache as soon as your action is resolving - hence\r\ncausing beckoned actions to run the action again) in one of your AsyncActions - Pullstate prevented\r\nfurther looping. Fix in your cacheBreakHook() is needed.`);\r\n                }\r\n                else {\r\n                    cacheBreakWatcher[key] = 0;\r\n                }\r\n                if (postActionEnabled && cache.results[key][1] && !fromListener) {\r\n                    runPostActionHook(cache.results[key][2], args, stores, context);\r\n                }\r\n                return {\r\n                    response: cache.results[key],\r\n                    cacheBroke: false,\r\n                    previous: undefined\r\n                };\r\n            }\r\n        }\r\n        return { cacheBroke: false, response: undefined, previous: undefined };\r\n    }\r\n    function createInternalAction(key, cache, args, stores, currentActionOrd, postActionEnabled, executionContext, customContext) {\r\n        return () => action(args, stores, customContext)\r\n            .then((resp) => {\r\n            if (currentActionOrd === cache.actionOrd[key]) {\r\n                if (postActionEnabled) {\r\n                    runPostActionHook(resp, args, stores, executionContext);\r\n                }\r\n                cache.results[key] = [true, true, resp, false, Date.now()];\r\n            }\r\n            return resp;\r\n        })\r\n            .catch((e) => {\r\n            console.error(e);\r\n            const result = {\r\n                payload: null,\r\n                errorPayload: null,\r\n                error: true,\r\n                tags: [EAsyncEndTags.THREW_ERROR],\r\n                message: e.message\r\n            };\r\n            if (currentActionOrd === cache.actionOrd[key]) {\r\n                if (postActionEnabled) {\r\n                    runPostActionHook(result, args, stores, executionContext);\r\n                }\r\n                cache.results[key] = [true, true, result, false, Date.now()];\r\n            }\r\n            return result;\r\n        })\r\n            .then((resp) => {\r\n            if (currentActionOrd === cache.actionOrd[key]) {\r\n                delete cache.actions[key];\r\n                if (!onServer) {\r\n                    notifyListeners(key);\r\n                }\r\n            }\r\n            return resp;\r\n        });\r\n    }\r\n    function checkKeyAndReturnResponse({ key, cache, initiate, ssr, args, stores, fromListener = false, postActionEnabled = true, cacheBreakEnabled = true, holdingResult, customContext, customCacheBreak, holdPrevious }) {\r\n        const cached = getCachedResult({\r\n            key,\r\n            cache,\r\n            args,\r\n            stores,\r\n            context: initiate ? EPostActionContext.BECKON_HIT_CACHE : EPostActionContext.WATCH_HIT_CACHE,\r\n            postActionEnabled,\r\n            cacheBreakEnabled,\r\n            fromListener,\r\n            customCacheBreak\r\n        });\r\n        if (cached.response) {\r\n            return cached.response;\r\n        }\r\n        if (!cache.actions.hasOwnProperty(key)) {\r\n            const currentActionOrd = actionOrdUpdate(cache, key);\r\n            if (initiate) {\r\n                if (shortCircuitHook !== undefined) {\r\n                    const shortCircuitResponse = shortCircuitHook({ args, stores });\r\n                    if (shortCircuitResponse !== false) {\r\n                        runPostActionHook(shortCircuitResponse, args, stores, EPostActionContext.SHORT_CIRCUIT);\r\n                        cache.results[key] = [true, true, shortCircuitResponse, false, Date.now()];\r\n                        return cache.results[key];\r\n                    }\r\n                }\r\n                if (ssr || !onServer) {\r\n                    cache.actions[key] = createInternalAction(key, cache, args, stores, currentActionOrd, postActionEnabled, EPostActionContext.BECKON_RUN, customContext);\r\n                }\r\n                if (!onServer) {\r\n                    cache.actions[key]();\r\n                    cache.results[key] = startedButUnfinishedResult;\r\n                }\r\n                else {\r\n                    return startedButUnfinishedResult;\r\n                }\r\n            }\r\n            else {\r\n                const resp = [\r\n                    false,\r\n                    false,\r\n                    {\r\n                        message: \"\",\r\n                        tags: [EAsyncEndTags.UNFINISHED],\r\n                        error: true,\r\n                        payload: null,\r\n                        errorPayload: null\r\n                    },\r\n                    false,\r\n                    -1\r\n                ];\r\n                if (!onServer) {\r\n                    cache.results[key] = resp;\r\n                }\r\n                if (holdPrevious) {\r\n                    if (holdingResult) {\r\n                        const response = [...holdingResult];\r\n                        response[3] = true;\r\n                        return response;\r\n                    }\r\n                    if (cached.previous != null) {\r\n                        const response = [...cached.previous];\r\n                        response[3] = true;\r\n                        return response;\r\n                    }\r\n                }\r\n                return resp;\r\n            }\r\n        }\r\n        if (holdPrevious) {\r\n            if (holdingResult) {\r\n                const response = [...holdingResult];\r\n                response[3] = true;\r\n                return response;\r\n            }\r\n            if (cached.previous != null) {\r\n                const response = [...cached.previous];\r\n                response[3] = true;\r\n                return response;\r\n            }\r\n        }\r\n        return startedButUnfinishedResult;\r\n    }\r\n    const read = (args = {}, { cacheBreakEnabled = true, postActionEnabled = true, key: customKey } = {}) => {\r\n        const key = _createKey(args, customKey);\r\n        const cache = onServer ? useContext(PullstateContext)._asyncCache : clientAsyncCache;\r\n        let stores;\r\n        let customContext;\r\n        if (onServer || forceContext) {\r\n            const pullstateContext = useContext(PullstateContext);\r\n            stores = pullstateContext.stores;\r\n            customContext = pullstateContext.customContext;\r\n        }\r\n        else if (clientStores.loaded) {\r\n            stores = clientStores.stores;\r\n        }\r\n        else {\r\n            stores = storeErrorProxy;\r\n        }\r\n        const cached = getCachedResult({\r\n            key,\r\n            cache,\r\n            args,\r\n            stores,\r\n            context: EPostActionContext.READ_HIT_CACHE,\r\n            postActionEnabled,\r\n            cacheBreakEnabled,\r\n            fromListener: false\r\n        });\r\n        if (cached.response) {\r\n            if (!cached.response[2].error) {\r\n                return cached.response[2].payload;\r\n            }\r\n            else {\r\n                throw new PullstateAsyncError(cached.response[2].message, cached.response[2].tags);\r\n            }\r\n        }\r\n        if (!cache.actions.hasOwnProperty(key)) {\r\n            if (shortCircuitHook !== undefined) {\r\n                const shortCircuitResponse = shortCircuitHook({ args, stores });\r\n                if (shortCircuitResponse !== false) {\r\n                    runPostActionHook(shortCircuitResponse, args, stores, EPostActionContext.SHORT_CIRCUIT);\r\n                    cache.results[key] = [true, true, shortCircuitResponse, false, Date.now()];\r\n                    if (!shortCircuitResponse.error) {\r\n                        return shortCircuitResponse.payload;\r\n                    }\r\n                    else {\r\n                        throw new PullstateAsyncError(shortCircuitResponse.message, shortCircuitResponse.tags);\r\n                    }\r\n                }\r\n            }\r\n            const currentActionOrd = actionOrdUpdate(cache, key);\r\n            cache.actions[key] = createInternalAction(key, cache, args, stores, currentActionOrd, postActionEnabled, EPostActionContext.READ_RUN, customContext);\r\n            if (onServer) {\r\n                throw new Error(`Pullstate Async Action: action.read() : Resolve all async state for Suspense actions before Server-side render ( make use of instance.runAsyncAction() )`);\r\n            }\r\n            throw cache.actions[key]();\r\n        }\r\n        if (onServer) {\r\n            throw new Error(`Pullstate Async Action: action.read() : Resolve all async state for Suspense actions before Server-side render ( make use of instance.runAsyncAction() )`);\r\n        }\r\n        const watchOrd = watchIdOrd++;\r\n        throw new Promise((resolve) => {\r\n            cache.listeners[key][watchOrd] = () => {\r\n                delete cache.listeners[key][watchOrd];\r\n                resolve();\r\n            };\r\n        });\r\n    };\r\n    const useWatch = (args = {}, { initiate = false, ssr = true, postActionEnabled = false, cacheBreakEnabled = false, holdPrevious = false, dormant = false, key: customKey, cacheBreak: customCacheBreakIncoming } = {}) => {\r\n        const responseRef = useRef();\r\n        const prevKeyRef = useRef(\".\");\r\n        const key = dormant ? \".\" : _createKey(args, customKey);\r\n        let watchId = useRef(-1);\r\n        if (watchId.current === -1) {\r\n            watchId.current = watchIdOrd++;\r\n        }\r\n        if (!dormant) {\r\n            if (!shouldUpdate.hasOwnProperty(key)) {\r\n                shouldUpdate[key] = {\r\n                    [watchId.current]: true\r\n                };\r\n            }\r\n            else {\r\n                shouldUpdate[key][watchId.current] = true;\r\n            }\r\n        }\r\n        const cache = onServer ? useContext(PullstateContext)._asyncCache : clientAsyncCache;\r\n        let stores;\r\n        let customContext;\r\n        if (onServer || forceContext) {\r\n            const pullstateContext = useContext(PullstateContext);\r\n            stores = pullstateContext.stores;\r\n            customContext = pullstateContext.customContext;\r\n        }\r\n        else if (clientStores.loaded) {\r\n            stores = clientStores.stores;\r\n        }\r\n        else {\r\n            stores = storeErrorProxy;\r\n        }\r\n        if (!onServer) {\r\n            const onAsyncStateChanged = () => {\r\n                if (shouldUpdate[key][watchId.current] && !isEqual(responseRef.current, cache.results[key])) {\r\n                    const nextResponse = checkKeyAndReturnResponse({\r\n                        key,\r\n                        cache,\r\n                        initiate,\r\n                        ssr,\r\n                        args,\r\n                        stores,\r\n                        fromListener: true,\r\n                        postActionEnabled,\r\n                        cacheBreakEnabled,\r\n                        holdingResult: undefined,\r\n                        customContext,\r\n                        holdPrevious\r\n                    });\r\n                    if (holdPrevious && !nextResponse[1] && responseRef.current != null && responseRef.current[1]) {\r\n                        responseRef.current = [...responseRef.current];\r\n                        responseRef.current[3] = true;\r\n                    }\r\n                    else {\r\n                        responseRef.current = nextResponse;\r\n                    }\r\n                    setWatchUpdate((prev) => {\r\n                        return prev + 1;\r\n                    });\r\n                }\r\n            };\r\n            if (!dormant) {\r\n                if (!cache.listeners.hasOwnProperty(key)) {\r\n                    cache.listeners[key] = {};\r\n                }\r\n                cache.listeners[key][watchId.current] = onAsyncStateChanged;\r\n                shouldUpdate[key][watchId.current] = true;\r\n            }\r\n            useEffect(() => {\r\n                if (!dormant) {\r\n                    cache.listeners[key][watchId.current] = onAsyncStateChanged;\r\n                    shouldUpdate[key][watchId.current] = true;\r\n                }\r\n                return () => {\r\n                    if (!dormant) {\r\n                        delete cache.listeners[key][watchId.current];\r\n                        shouldUpdate[key][watchId.current] = false;\r\n                    }\r\n                };\r\n            }, [key]);\r\n        }\r\n        const [_, setWatchUpdate] = useState(0);\r\n        if (dormant) {\r\n            responseRef.current =\r\n                holdPrevious && responseRef.current && responseRef.current[1]\r\n                    ? responseRef.current\r\n                    : [\r\n                        false,\r\n                        false,\r\n                        {\r\n                            message: \"\",\r\n                            tags: [EAsyncEndTags.DORMANT],\r\n                            error: true,\r\n                            payload: null\r\n                        },\r\n                        false,\r\n                        -1\r\n                    ];\r\n            prevKeyRef.current = \".\";\r\n        }\r\n        else if (prevKeyRef.current !== key) {\r\n            if (prevKeyRef.current !== null && shouldUpdate.hasOwnProperty(prevKeyRef.current)) {\r\n                delete cache.listeners[prevKeyRef.current][watchId.current];\r\n                shouldUpdate[prevKeyRef.current][watchId.current] = false;\r\n            }\r\n            prevKeyRef.current = key;\r\n            responseRef.current = checkKeyAndReturnResponse({\r\n                key,\r\n                cache,\r\n                initiate,\r\n                ssr,\r\n                args,\r\n                stores,\r\n                fromListener: false,\r\n                postActionEnabled,\r\n                cacheBreakEnabled,\r\n                holdingResult: holdPrevious && responseRef.current && responseRef.current[1] ? responseRef.current : undefined,\r\n                customContext,\r\n                customCacheBreak: convertCustomCacheBreakHook(customCacheBreakIncoming),\r\n                holdPrevious\r\n            });\r\n        }\r\n        return responseRef.current;\r\n    };\r\n    const useBeckon = (args = {}, { ssr = true, postActionEnabled = true, cacheBreakEnabled = true, holdPrevious = false, dormant = false, key } = {}) => {\r\n        const result = useWatch(args, {\r\n            initiate: true,\r\n            ssr,\r\n            postActionEnabled,\r\n            cacheBreakEnabled,\r\n            holdPrevious,\r\n            dormant,\r\n            key\r\n        });\r\n        return [result[1], result[2], result[3]];\r\n    };\r\n    const run = async (args = {}, inputs = {}) => {\r\n        const { treatAsUpdate = false, ignoreShortCircuit = false, respectCache = false, key: customKey, _asyncCache = clientAsyncCache, _stores = clientStores.loaded ? clientStores.stores : storeErrorProxy, _customContext, cacheBreak: customCacheBreak } = inputs;\r\n        const key = _createKey(args, customKey);\r\n        if (respectCache) {\r\n            const cached = getCachedResult({\r\n                key,\r\n                cache: _asyncCache,\r\n                args,\r\n                stores: _stores,\r\n                context: EPostActionContext.RUN_HIT_CACHE,\r\n                postActionEnabled: true,\r\n                cacheBreakEnabled: true,\r\n                fromListener: false,\r\n                customCacheBreak: convertCustomCacheBreakHook(customCacheBreak)\r\n            });\r\n            if (cached.response && cached.response[0]) {\r\n                if (!cached.response[1]) {\r\n                    const watchOrd = watchIdOrd++;\r\n                    if (!_asyncCache.listeners.hasOwnProperty(key)) {\r\n                        _asyncCache.listeners[key] = {};\r\n                    }\r\n                    return new Promise((resolve) => {\r\n                        _asyncCache.listeners[key][watchOrd] = () => {\r\n                            const [, finished, resp] = _asyncCache.results[key];\r\n                            if (finished) {\r\n                                delete _asyncCache.listeners[key][watchOrd];\r\n                                resolve(resp);\r\n                            }\r\n                        };\r\n                    });\r\n                }\r\n                return cached.response[2];\r\n            }\r\n        }\r\n        if (!ignoreShortCircuit && shortCircuitHook !== undefined) {\r\n            const shortCircuitResponse = shortCircuitHook({ args, stores: _stores });\r\n            if (shortCircuitResponse !== false) {\r\n                _asyncCache.results[key] = [true, true, shortCircuitResponse, false, Date.now()];\r\n                runPostActionHook(shortCircuitResponse, args, _stores, EPostActionContext.SHORT_CIRCUIT);\r\n                notifyListeners(key);\r\n                return shortCircuitResponse;\r\n            }\r\n        }\r\n        const [, prevFinished, prevResp, prevUpdate, prevCacheTime] = _asyncCache.results[key] || [\r\n            false,\r\n            false,\r\n            {\r\n                error: true,\r\n                message: \"\",\r\n                payload: null,\r\n                tags: [EAsyncEndTags.UNFINISHED]\r\n            },\r\n            false,\r\n            -1\r\n        ];\r\n        if (prevFinished && treatAsUpdate) {\r\n            _asyncCache.results[key] = [true, true, prevResp, true, prevCacheTime];\r\n        }\r\n        else {\r\n            _asyncCache.results[key] = [\r\n                true,\r\n                false,\r\n                {\r\n                    error: true,\r\n                    message: \"\",\r\n                    payload: null,\r\n                    tags: [EAsyncEndTags.UNFINISHED]\r\n                },\r\n                false,\r\n                -1\r\n            ];\r\n        }\r\n        let currentActionOrd = actionOrdUpdate(_asyncCache, key);\r\n        _asyncCache.actions[key] = createInternalAction(key, _asyncCache, args, _stores, currentActionOrd, true, EPostActionContext.DIRECT_RUN, _customContext);\r\n        notifyListeners(key);\r\n        return _asyncCache.actions[key]();\r\n    };\r\n    const clearCache = (args = {}, { key: customKey, notify = true } = {}) => {\r\n        const key = _createKey(args, customKey);\r\n        clearActionCache(key, true, notify);\r\n    };\r\n    const clearAllCache = ({ notify = true } = {}) => {\r\n        for (const key of Object.keys(clientAsyncCache.actionOrd)) {\r\n            if (key.startsWith(`${ordinal}-`)) {\r\n                clearActionCache(key, true, notify);\r\n            }\r\n        }\r\n    };\r\n    const clearAllUnwatchedCache = ({ notify = true } = {}) => {\r\n        for (const key of Object.keys(shouldUpdate)) {\r\n            if (!Object.values(shouldUpdate[key]).some((su) => su)) {\r\n                delete shouldUpdate[key];\r\n                clearActionCache(key, false, notify);\r\n            }\r\n        }\r\n    };\r\n    const setCached = (args, result, options) => {\r\n        const { notify = true, key: customKey } = options || {};\r\n        const key = _createKey(args, customKey);\r\n        const cache = onServer ? useContext(PullstateContext)._asyncCache : clientAsyncCache;\r\n        cache.results[key] = [true, true, result, false, Date.now()];\r\n        if (notify) {\r\n            notifyListeners(key);\r\n        }\r\n    };\r\n    const setCachedPayload = (args, payload, options) => {\r\n        return setCached(args, successResult(payload), options);\r\n    };\r\n    const updateCached = (args, updater, options) => {\r\n        const { notify = true, resetTimeCached = true, runPostActionHook: postAction = false, key: customKey } = options || {};\r\n        const key = _createKey(args, customKey);\r\n        const cache = onServer ? useContext(PullstateContext)._asyncCache : clientAsyncCache;\r\n        if (cache.results.hasOwnProperty(key) && !cache.results[key][2].error) {\r\n            const currentCached = cache.results[key][2].payload;\r\n            const newResult = {\r\n                payload: produce$1(currentCached, (s) => updater(s, currentCached)),\r\n                error: false,\r\n                message: cache.results[key][2].message,\r\n                tags: cache.results[key][2].tags\r\n            };\r\n            if (postAction) {\r\n                runPostActionHook(newResult, args, clientStores.loaded ? clientStores.stores : storeErrorProxy, EPostActionContext.CACHE_UPDATE);\r\n            }\r\n            cache.results[key] = [\r\n                true,\r\n                true,\r\n                newResult,\r\n                cache.results[key][3],\r\n                resetTimeCached ? Date.now() : cache.results[key][4]\r\n            ];\r\n            if (notify) {\r\n                notifyListeners(key);\r\n            }\r\n        }\r\n    };\r\n    const getCached = (args = {}, options) => {\r\n        var _a;\r\n        const { checkCacheBreak = false, key: customKey, cacheBreak: incomingCacheBreak } = options || {};\r\n        const key = _createKey(args, customKey);\r\n        let cacheBreakable = false;\r\n        const cache = clientAsyncCache;\r\n        if (cache.results.hasOwnProperty(key)) {\r\n            const finalizedCacheBreakHook = (_a = convertCustomCacheBreakHook(incomingCacheBreak)) !== null && _a !== void 0 ? _a : cacheBreakHook;\r\n            if (checkCacheBreak && finalizedCacheBreakHook !== undefined) {\r\n                const stores = onServer\r\n                    ? useContext(PullstateContext).stores\r\n                    : clientStores.loaded\r\n                        ? clientStores.stores\r\n                        : storeErrorProxy;\r\n                if (finalizedCacheBreakHook({\r\n                    args,\r\n                    result: cache.results[key][2],\r\n                    stores,\r\n                    timeCached: cache.results[key][4]\r\n                })) {\r\n                    cacheBreakable = true;\r\n                }\r\n            }\r\n            const [started, finished, result, updating, timeCached] = cache.results[key];\r\n            return {\r\n                started,\r\n                finished,\r\n                result: result,\r\n                existed: true,\r\n                cacheBreakable,\r\n                updating,\r\n                timeCached\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                started: false,\r\n                finished: false,\r\n                result: {\r\n                    message: \"\",\r\n                    tags: [EAsyncEndTags.UNFINISHED],\r\n                    error: true,\r\n                    payload: null,\r\n                    errorPayload: null\r\n                },\r\n                updating: false,\r\n                existed: false,\r\n                cacheBreakable,\r\n                timeCached: -1\r\n            };\r\n        }\r\n    };\r\n    let delayedRunActionTimeout;\r\n    const delayedRun = (args = {}, { clearOldRun = true, delay, immediateIfCached = true, ...otherRunOptions }) => {\r\n        if (clearOldRun) {\r\n            clearTimeout(delayedRunActionTimeout);\r\n        }\r\n        if (immediateIfCached) {\r\n            const { finished, cacheBreakable } = getCached(args, { checkCacheBreak: true });\r\n            if (finished && !cacheBreakable) {\r\n                run(args, otherRunOptions);\r\n                return () => {\r\n                };\r\n            }\r\n        }\r\n        let ref = { cancelled: false };\r\n        delayedRunActionTimeout = setTimeout(() => {\r\n            if (!ref.cancelled) {\r\n                run(args, otherRunOptions);\r\n            }\r\n        }, delay);\r\n        return () => {\r\n            ref.cancelled = true;\r\n        };\r\n    };\r\n    const use = (args = {}, { initiate = true, ssr = true, postActionEnabled, cacheBreakEnabled, holdPrevious = false, dormant = false, key, onSuccess, cacheBreak: customCacheBreakHook } = {}) => {\r\n        if (postActionEnabled == null) {\r\n            postActionEnabled = initiate;\r\n        }\r\n        if (cacheBreakEnabled == null) {\r\n            cacheBreakEnabled = initiate;\r\n        }\r\n        const raw = useWatch(args, {\r\n            initiate,\r\n            ssr,\r\n            postActionEnabled,\r\n            cacheBreakEnabled,\r\n            holdPrevious,\r\n            dormant,\r\n            key,\r\n            cacheBreak: customCacheBreakHook\r\n        });\r\n        const [isStarted, isFinished, result, isUpdating] = raw;\r\n        const isSuccess = isFinished && !result.error;\r\n        const isFailure = isFinished && result.error;\r\n        if (onSuccess) {\r\n            useEffect(() => {\r\n                if (isSuccess && !dormant) {\r\n                    onSuccess(result.payload, args);\r\n                }\r\n            }, [isSuccess]);\r\n        }\r\n        const renderPayload = (func) => {\r\n            if (!result.error) {\r\n                return func(result.payload);\r\n            }\r\n            return React.Fragment;\r\n        };\r\n        return {\r\n            isStarted,\r\n            isFinished,\r\n            isUpdating,\r\n            isSuccess,\r\n            isFailure,\r\n            isLoading: isStarted && (!isFinished || isUpdating),\r\n            endTags: result.tags,\r\n            error: result.error,\r\n            payload: result.payload,\r\n            errorPayload: result.errorPayload,\r\n            renderPayload,\r\n            message: result.message,\r\n            raw,\r\n            execute: (runOptions) => run(args, runOptions),\r\n            clearCached: () => clearCache(args),\r\n            setCached: (response, options) => {\r\n                setCached(args, response, options);\r\n            },\r\n            setCachedPayload: (payload, options) => {\r\n                setCachedPayload(args, payload, options);\r\n            },\r\n            updateCached: (updater, options) => {\r\n                updateCached(args, updater, options);\r\n            }\r\n        };\r\n    };\r\n    const useDefer = (inputs = {}) => {\r\n        const [argState, setArgState] = useState(() => ({\r\n            key: inputs.key ? inputs.key : deferWaitingKey,\r\n            args: {}\r\n        }));\r\n        const initialResponse = use({}, {\r\n            ...inputs,\r\n            key: argState.key,\r\n            initiate: false\r\n        });\r\n        const hasCached = (args = {}, options = {}) => {\r\n            var _a, _b;\r\n            const executionKey = (_a = inputs.key) !== null && _a !== void 0 ? _a : _createKey(args);\r\n            const { checkCacheBreak = true, successOnly = false } = options;\r\n            const cached = getCached(args, {\r\n                key: executionKey,\r\n                cacheBreak: (_b = options.cacheBreak) !== null && _b !== void 0 ? _b : inputs.cacheBreak,\r\n                checkCacheBreak\r\n            });\r\n            if (cached.existed) {\r\n                if (!checkCacheBreak || !cached.cacheBreakable) {\r\n                    return !successOnly || !cached.result.error;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        const unwatchExecuted = () => {\r\n            setArgState({ key: deferWaitingKey, args: {} });\r\n        };\r\n        const execute = (args = {}, runOptions) => {\r\n            var _a;\r\n            const executionKey = (_a = inputs.key) !== null && _a !== void 0 ? _a : _createKey(args);\r\n            if (executionKey !== argState.key) {\r\n                setArgState({ key: executionKey, args });\r\n            }\r\n            return run(args, {\r\n                ...runOptions,\r\n                key: executionKey,\r\n                cacheBreak: inputs.cacheBreak\r\n            }).then(resp => {\r\n                if (inputs.clearOnSuccess) {\r\n                    clearCache({}, { key: executionKey });\r\n                }\r\n                return resp;\r\n            });\r\n        };\r\n        return {\r\n            ...initialResponse,\r\n            clearCached: () => {\r\n                clearCache({}, { key: argState.key });\r\n            },\r\n            unwatchExecuted,\r\n            setCached: (response, options = {}) => {\r\n                options.key = argState.key;\r\n                setCached({}, response, options);\r\n            },\r\n            setCachedPayload: (payload, options = {}) => {\r\n                options.key = argState.key;\r\n                setCachedPayload({}, payload, options);\r\n            },\r\n            updateCached: (updater, options = {}) => {\r\n                options.key = argState.key;\r\n                updateCached({}, updater, options);\r\n            },\r\n            useDebouncedExecution: (args, delay, options = {}) => {\r\n                if (!onServer) {\r\n                    const stateRef = useRef({ update: false });\r\n                    const currentValue = useRef(undefined);\r\n                    const executionOrd = useRef(-1);\r\n                    const timeout = useRef(undefined);\r\n                    useEffect(() => {\r\n                        stateRef.current.update = true;\r\n                        return () => {\r\n                            stateRef.current.update = false;\r\n                        };\r\n                    }, []);\r\n                    const hasEqualityCheck = options.equality != null;\r\n                    if (hasEqualityCheck) {\r\n                        if (typeof options.equality === \"function\") {\r\n                            if ((currentValue.current === undefined || options.equality(currentValue.current, args))) {\r\n                                currentValue.current = args;\r\n                                executionOrd.current += 1;\r\n                            }\r\n                        }\r\n                        else if (currentValue.current !== options.equality) {\r\n                            currentValue.current = options.equality;\r\n                            executionOrd.current += 1;\r\n                        }\r\n                    }\r\n                    else if (!isEqual(currentValue.current, args)) {\r\n                        currentValue.current = args;\r\n                        executionOrd.current += 1;\r\n                    }\r\n                    useEffect(() => {\r\n                        var _a, _b, _c;\r\n                        clearTimeout(timeout.current);\r\n                        const executeAction = () => {\r\n                            var _a;\r\n                            if (stateRef.current.update) {\r\n                                execute(args, (_a = options.executeOptions) !== null && _a !== void 0 ? _a : { respectCache: true });\r\n                            }\r\n                        };\r\n                        if ((_b = (_a = options.validInput) === null || _a === void 0 ? void 0 : _a.call(options, args)) !== null && _b !== void 0 ? _b : true) {\r\n                            if (hasCached(args)) {\r\n                                executeAction();\r\n                            }\r\n                            else {\r\n                                timeout.current = setTimeout(executeAction, delay);\r\n                            }\r\n                        }\r\n                        else if (!((_c = options.watchLastValid) !== null && _c !== void 0 ? _c : false)) {\r\n                            unwatchExecuted();\r\n                        }\r\n                    }, [executionOrd.current]);\r\n                }\r\n            },\r\n            hasCached,\r\n            execute,\r\n            args: argState.args,\r\n            key: argState.key\r\n        };\r\n    };\r\n    return {\r\n        use,\r\n        useDefer,\r\n        read,\r\n        useBeckon,\r\n        useWatch,\r\n        run,\r\n        delayedRun,\r\n        clearCache,\r\n        clearAllCache,\r\n        clearAllUnwatchedCache,\r\n        getCached,\r\n        setCached,\r\n        setCachedPayload,\r\n        updateCached\r\n    };\r\n}const PullstateContext = React.createContext(null);\r\nconst PullstateProvider = ({ instance, children }) => {\r\n    return React.createElement(PullstateContext.Provider, { value: instance }, children);\r\n};\r\nlet singleton = null;\r\nconst clientStores = {\r\n    internalClientStores: true,\r\n    loaded: false,\r\n    stores: {}\r\n};\r\nclass PullstateSingleton {\r\n    constructor(allStores, options = {}) {\r\n        this.options = {};\r\n        if (singleton !== null) {\r\n            console.error(`Pullstate: createPullstate() - Should not be creating the core Pullstate class more than once! In order to re-use pull state, you need to call instantiate() on your already created object.`);\r\n        }\r\n        singleton = this;\r\n        clientStores.stores = allStores;\r\n        clientStores.loaded = true;\r\n        this.options = options;\r\n    }\r\n    instantiate({ hydrateSnapshot, ssr = false, customContext } = {}) {\r\n        if (!ssr) {\r\n            const instantiated = new PullstateInstance(clientStores.stores, false, customContext);\r\n            if (hydrateSnapshot != null) {\r\n                instantiated.hydrateFromSnapshot(hydrateSnapshot);\r\n            }\r\n            instantiated.instantiateReactions();\r\n            return instantiated;\r\n        }\r\n        const newStores = {};\r\n        for (const storeName of Object.keys(clientStores.stores)) {\r\n            if (hydrateSnapshot == null) {\r\n                newStores[storeName] = new Store(clientStores.stores[storeName]._getInitialState());\r\n            }\r\n            else if (hydrateSnapshot.hasOwnProperty(storeName)) {\r\n                newStores[storeName] = new Store(hydrateSnapshot.allState[storeName]);\r\n            }\r\n            else {\r\n                newStores[storeName] = new Store(clientStores.stores[storeName]._getInitialState());\r\n                console.warn(`Pullstate (instantiate): store [${storeName}] didn't hydrate any state (data was non-existent on hydration object)`);\r\n            }\r\n            newStores[storeName]._setInternalOptions({\r\n                ssr,\r\n                reactionCreators: clientStores.stores[storeName]._getReactionCreators()\r\n            });\r\n        }\r\n        return new PullstateInstance(newStores, true, customContext);\r\n    }\r\n    useStores() {\r\n        return useStores();\r\n    }\r\n    useInstance() {\r\n        return useInstance();\r\n    }\r\n    createAsyncActionDirect(action, options = {}) {\r\n        return createAsyncActionDirect(action, options);\r\n    }\r\n    createAsyncAction(action, options = {}) {\r\n        var _a;\r\n        if (((_a = this.options.asyncActions) === null || _a === void 0 ? void 0 : _a.defaultCachingSeconds) && !options.cacheBreakHook) {\r\n            options.cacheBreakHook = (inputs) => inputs.timeCached < Date.now() - this.options.asyncActions.defaultCachingSeconds * 1000;\r\n        }\r\n        return createAsyncAction(action, options);\r\n    }\r\n}\r\nclass PullstateInstance {\r\n    constructor(allStores, ssr, customContext) {\r\n        this._ssr = false;\r\n        this._stores = {};\r\n        this._asyncCache = {\r\n            listeners: {},\r\n            results: {},\r\n            actions: {},\r\n            actionOrd: {}\r\n        };\r\n        this._stores = allStores;\r\n        this._ssr = ssr;\r\n        this._customContext = customContext;\r\n    }\r\n    getAllUnresolvedAsyncActions() {\r\n        return Object.keys(this._asyncCache.actions).map((key) => this._asyncCache.actions[key]());\r\n    }\r\n    instantiateReactions() {\r\n        for (const storeName of Object.keys(this._stores)) {\r\n            this._stores[storeName]._instantiateReactions();\r\n        }\r\n    }\r\n    getPullstateSnapshot() {\r\n        const allState = {};\r\n        for (const storeName of Object.keys(this._stores)) {\r\n            allState[storeName] = this._stores[storeName].getRawState();\r\n        }\r\n        return { allState, asyncResults: this._asyncCache.results, asyncActionOrd: this._asyncCache.actionOrd };\r\n    }\r\n    async resolveAsyncState() {\r\n        const promises = this.getAllUnresolvedAsyncActions();\r\n        await Promise.all(promises);\r\n    }\r\n    hasAsyncStateToResolve() {\r\n        return Object.keys(this._asyncCache.actions).length > 0;\r\n    }\r\n    get stores() {\r\n        return this._stores;\r\n    }\r\n    get customContext() {\r\n        return this._customContext;\r\n    }\r\n    async runAsyncAction(asyncAction, args = {}, runOptions = {}) {\r\n        if (this._ssr) {\r\n            runOptions._asyncCache = this._asyncCache;\r\n            runOptions._stores = this._stores;\r\n            runOptions._customContext = this._customContext;\r\n        }\r\n        return await asyncAction.run(args, runOptions);\r\n    }\r\n    hydrateFromSnapshot(snapshot) {\r\n        for (const storeName of Object.keys(this._stores)) {\r\n            if (snapshot.allState.hasOwnProperty(storeName)) {\r\n                this._stores[storeName]._updateStateWithoutReaction(snapshot.allState[storeName]);\r\n            }\r\n            else {\r\n                console.warn(`${storeName} didn't hydrate any state (data was non-existent on hydration object)`);\r\n            }\r\n        }\r\n        clientAsyncCache.results = snapshot.asyncResults || {};\r\n        clientAsyncCache.actionOrd = snapshot.asyncActionOrd || {};\r\n    }\r\n}\r\nfunction createPullstateCore(allStores = {}, options = {}) {\r\n    return new PullstateSingleton(allStores, options);\r\n}\r\nfunction useStores() {\r\n    return useContext(PullstateContext).stores;\r\n}\r\nfunction useInstance() {\r\n    return useContext(PullstateContext);\r\n}var EAsyncActionInjectType;\r\n(function (EAsyncActionInjectType) {\r\n    EAsyncActionInjectType[\"WATCH\"] = \"watch\";\r\n    EAsyncActionInjectType[\"BECKON\"] = \"beckon\";\r\n})(EAsyncActionInjectType || (EAsyncActionInjectType = {}));\r\nfunction InjectAsyncAction(props) {\r\n    if (props.type === EAsyncActionInjectType.BECKON) {\r\n        const response = props.action.useBeckon(props.args, props.options);\r\n        return props.children(response);\r\n    }\r\n    const response = props.action.useWatch(props.args, props.options);\r\n    return props.children(response);\r\n}function registerInDevtools(stores, { namespace = \"\" } = {}) {\r\n    const devToolsExtension = typeof window !== \"undefined\" ? window === null || window === void 0 ? void 0 : window.__REDUX_DEVTOOLS_EXTENSION__ : undefined;\r\n    if (devToolsExtension) {\r\n        for (const key of Object.keys(stores)) {\r\n            const store = stores[key];\r\n            const devTools = devToolsExtension.connect({ name: `${namespace}${key}` });\r\n            devTools.init(store.getRawState());\r\n            let ignoreNext = false;\r\n            store.subscribe((s) => s, (watched) => {\r\n                if (ignoreNext) {\r\n                    ignoreNext = false;\r\n                    return;\r\n                }\r\n                devTools.send(\"Change\", watched);\r\n            });\r\n            devTools.subscribe((message) => {\r\n                if (message.type === \"DISPATCH\" && message.state) {\r\n                    ignoreNext = true;\r\n                    const parsed = JSON.parse(message.state);\r\n                    store.replace(parsed);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}const batchState = {};\r\nfunction setupBatch({ uiBatchFunction }) {\r\n    batchState.uiBatchFunction = uiBatchFunction;\r\n}\r\nfunction batch(runUpdates) {\r\n    if (globalClientState.batching) {\r\n        throw new Error(\"Pullstate: Can't enact two batch() update functions at the same time-\\n\" +\r\n            \"make sure you are not running a batch() inside of a batch() by mistake.\");\r\n    }\r\n    globalClientState.batching = true;\r\n    try {\r\n        runUpdates();\r\n    }\r\n    finally {\r\n        if (batchState.uiBatchFunction) {\r\n            batchState.uiBatchFunction(() => {\r\n                Object.values(globalClientState.flushStores).forEach(store => store.flushBatch(true));\r\n            });\r\n        }\r\n        else {\r\n            Object.values(globalClientState.flushStores).forEach(store => store.flushBatch(true));\r\n        }\r\n        globalClientState.flushStores = {};\r\n        globalClientState.batching = false;\r\n    }\r\n}export{EAsyncActionInjectType,EAsyncEndTags,EPostActionContext,InjectAsyncAction,InjectStoreState,PullstateContext,PullstateProvider,Store,batch,createAsyncAction,createAsyncActionDirect,createPullstateCore,errorResult,registerInDevtools,setupBatch,successResult,update,useInstance,useLocalStore,useStoreState,useStores};", "import { Store } from \"pullstate\";\n\nmodule.exports = {\n  State: new Store({\n    spotifyAccessToken: null,\n    selectedSongs: null,\n    validatedSongsToAdd: false,\n    spotifyTracksToAdd: [],\n  }),\n};\n", "import { State } from \"./state\";\n\n// Helper function to generate a random string for the code verifier\nexport function generateRandomString() {\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const length = 128;\n  let randomString = \"\";\n  for (let i = 0; i < length; i++) {\n    randomString += characters.charAt(\n      Math.floor(Math.random() * characters.length)\n    );\n  }\n  return randomString;\n}\n\nexport async function generateCodeChallenge(codeVerifier) {\n  function base64encode(string) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(string)))\n      .replace(/\\+/g, \"-\")\n      .replace(/\\//g, \"_\")\n      .replace(/=+$/, \"\");\n  }\n\n  const encoder = new TextEncoder();\n  const data = encoder.encode(codeVerifier);\n  const digest = await window.crypto.subtle.digest(\"SHA-256\", data);\n\n  return base64encode(digest);\n}\n\nexport function copyToClipboard(text) {\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    return window.clipboardData.setData(\"Text\", text);\n  } else if (\n    document.queryCommandSupported &&\n    document.queryCommandSupported(\"copy\")\n  ) {\n    var textarea = document.createElement(\"textarea\");\n    textarea.textContent = text;\n    textarea.style.position = \"fixed\"; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand(\"copy\"); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      console.warn(\"Copy to clipboard failed.\", ex);\n      return prompt(\"Copy to clipboard: Ctrl+C, Enter\", text);\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n}\n\nexport async function spot(key, url, method, body) {\n  const headers = {\n    Authorization: `Bearer ${State.currentState.spotifyAccessToken}`,\n  };\n  if (!url.startsWith(\"https://\")) {\n    url = `https://api.spotify.com/v1/${url}`;\n  }\n  if (method === \"POST\") {\n    const response = await fetch(url, {\n      headers: headers,\n      method: \"POST\",\n      body: JSON.stringify(body),\n    });\n\n    return await response.json();\n  }\n  if (key) {\n    const localData = localStorage.getItem(key);\n    if (localData) {\n      return JSON.parse(localData);\n    }\n  }\n\n  const response = await fetch(url, {\n    headers: headers,\n  });\n  const data = await response.json();\n  if (key && !data.error) {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n  return data;\n}\n\nexport async function fetchPlaylist(playlistId, cache) {\n  let allSongs = [];\n\n  function genkey(page) {\n    if (cache) {\n      return `${playlistId}-${page}`;\n    }\n    return null;\n  }\n  let pages = 0;\n  let data = await spot(\n    genkey(pages),\n    `playlists/${playlistId}/tracks?limit=100`\n  );\n  allSongs = allSongs.concat(data.items);\n\n  while (data.next) {\n    pages += 1;\n\n    data = await spot(genkey(pages), data.next);\n    allSongs = allSongs.concat(data.items);\n    if (pages > 3) {\n      break;\n    }\n  }\n\n  return allSongs;\n}\n\nexport function shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n", "import { h, Fragment, render, Component } from \"preact\";\nimport { State } from \"./state\";\nimport { generateRandomString, generateCodeChallenge } from \"./utils\";\nconst clientId = \"6c33c75c94c44805bcf8fee81d8c9fa5\";\nconst redirectUri = window.location.origin;\nconsole.log(window.location.href)\nconst spotifyEndpoint = \"https://api.spotify.com/v1\";\nconst spotifyAuthUrl = \"https://accounts.spotify.com/authorize\";\n\nclass Auth extends Component {\n  async update() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorizationCode = urlParams.get(\"code\");\n\n    const savedCodeVerifier = localStorage.getItem(\"code-verifier\");\n\n    if (authorizationCode) {\n      // Remove the code from the URL\n      urlParams.delete(\"code\");\n      urlParams.delete(\"state\");\n      let query = urlParams.toString();\n      if (query.length > 0) {\n        query = `?${query}`;\n      }\n      const newUrl = `${window.location.pathname}${query}`;\n      window.history.replaceState({}, document.title, newUrl);\n\n      // Exchange the authorization code and code verifier for an access token\n      const tokenParams = new URLSearchParams({\n        grant_type: \"authorization_code\",\n        code: authorizationCode,\n        redirect_uri: redirectUri,\n        client_id: clientId,\n        code_verifier: savedCodeVerifier,\n      });\n      const tokenUrl = \"https://accounts.spotify.com/api/token\";\n\n      fetch(tokenUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: tokenParams.toString(),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          // Save the access token to local storage or a cookie\n          if (data.error) {\n            console.log(\"ERROR\", data);\n            localStorage.removeItem(\"spotifyAccessToken\");\n          } else {\n            State.update((s) => {\n              localStorage.setItem(\"spotifyAccessToken\", data.access_token);\n              s.spotifyAccessToken = data.access_token;\n            });\n          }\n        })\n        .catch((error) => console.error(error));\n    }\n\n    const spotifyAccessToken = localStorage.getItem(\"spotifyAccessToken\");\n    if (spotifyAccessToken) {\n      State.update((s) => {\n        s.spotifyAccessToken = spotifyAccessToken;\n      });\n    }\n  }\n  componentDidMount() {\n    this.update();\n  }\n  async goToSpotifyOauthPage() {\n    const codeVerifier = generateRandomString();\n    // const codeChallenge = b64encode(await sha256(codeVerifier));\n    const codeChallenge = await generateCodeChallenge(codeVerifier);\n    const authParams = new URLSearchParams({\n      client_id: clientId,\n      response_type: \"code\",\n      redirect_uri: redirectUri,\n      code_challenge_method: \"S256\",\n      code_challenge: codeChallenge,\n      scope:\n        \"user-read-private playlist-read-private playlist-modify-private playlist-modify-public playlist-read-collaborative user-read-recently-played user-library-read\",\n    });\n    const authUrl = `${spotifyAuthUrl}?${authParams.toString()}`;\n\n    // Redirect the user to the Spotify authorization page\n    localStorage.setItem(\"code-verifier\", codeVerifier);\n    window.location.href = authUrl;\n  }\n  logout() {\n    State.update((s) => {\n      localStorage.clear();\n      s.spotifyAccessToken = null;\n    });\n    window.location.reload();\n  }\n  render() {\n    const spotifyAccessToken = State.useState((s) => s.spotifyAccessToken);\n    const login = <button class=\"mr-2\" onClick={this.goToSpotifyOauthPage}>Log in with Spotify</button>;\n    const logout = <button class=\"mr-2\" onClick={this.logout}>Log out</button>;\n    return (\n      <div>\n        {spotifyAccessToken ? logout : login}\n        <button\n          onClick={() => {\n            for (let i = 0, len = localStorage.length; i < len; ++i) {\n              let key = localStorage.key(i);\n              if (key === \"spotifyAccessToken\") {\n                continue;\n              }\n              localStorage.removeItem(key);\n            }\n          }}\n        >\n          Clear Cache\n        </button>\n      </div>\n    );\n  }\n}\n\nmodule.exports = Auth;\n", "import { h, Fragment, render, Component } from \"preact\";\nimport { State } from \"./state\";\nimport Auth from \"./auth\";\nimport { Usage } from \"./usage\";\nimport { PlaylistSelector } from \"./selector\";\nimport { RecommendConsumer } from \"./consumer\";\n\nclass App extends Component {\n  render() {\n    const loggedIn = State.useState((s) => s.spotifyAccessToken);\n    let selector = null;\n    let consumer = null;\n    if (loggedIn) {\n      selector = <PlaylistSelector />;\n      consumer = <RecommendConsumer />;\n    }\n    return (\n      <div>\n        <Auth />\n        <Usage />\n        {selector}\n        {consumer}\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.querySelector(\"#container\"));\n", "import { h, Fragment, render, Component } from \"preact\";\n\nexport class Usage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      expanded: false,\n    };\n  }\n\n  render() {\n    let expanded = this.state.expanded;\n    let icon = <span>show more</span>;\n    if (expanded) {\n      icon = <span>show less</span>;\n    }\n    let usage = null;\n    if (expanded) {\n      usage = (\n        <ol>\n          <li>Log in</li>\n          <li>Choose one of your playlists to generate recommendations from</li>\n          <li>\n            Generate the prompt and copy-paste it to{\" \"}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chat.openai.com/\">https://chat.openai.com/</a>\n          </li>\n          <li>Copy the code response from chatGPT back to this page</li>\n          <li>\n            Click the update button to validate chatGPT's suggestions and add\n            them to a Spotify playlist called \"GPT Recs\"\n          </li>\n        </ol>\n      );\n    }\n    return (\n      <div>\n        <p>\n          Usage instructions{\" \"}\n          <span\n            onClick={() => {\n              this.setState({\n                expanded: !this.state.expanded,\n              });\n            }}\n            class=\"cursor-pointer select-none\"\n          >\n            {icon}\n          </span>\n        </p>\n        {usage}\n      </div>\n    );\n  }\n}\n", "import { h, Fragment, render, Component } from \"preact\";\nimport { State } from \"./state\";\nimport { copyToClipboard, shuffle, fetchPlaylist, spot } from \"./utils\";\n\nexport class PlaylistList extends Component {\n  async update() {\n    const me = await spot(\"me\", \"me\");\n    const playlists = await spot(\"playlists\", `users/${me.id}/playlists`);\n    this.setState({\n      playlists: playlists.items,\n    });\n  }\n  componentDidMount() {\n    if (State.currentState.spotifyAccessToken) {\n      this.update();\n    } else {\n      State.subscribe(\n        (s) => s.spotifyAccessToken,\n        () => {\n          this.update();\n        }\n      );\n    }\n  }\n  render() {\n    const playlists = this.state.playlists;\n    const selectedPlaylistId = State.useState((s) => s.selectedPlaylistId);\n    if (!playlists) {\n      return <p>Loading playlists...</p>;\n    }\n\n    let rows = playlists.map((playlist) => (\n      <tr\n        style={{\n          color: selectedPlaylistId == playlist.id ? \"red\" : \"green\",\n        }}\n        class=\"cursor-pointer\"\n        onClick={async () => {\n          State.update((s) => {\n            s.selectedPlaylistId = playlist.id;\n            s.prompt = \"loading playlist\";\n          });\n          const allSongs = await fetchPlaylist(playlist.id, true);\n          State.update((s) => {\n            console.log(`Updated state with ${allSongs.length} songs`);\n            s.selectedPlaylistTracks = allSongs;\n            s.selectedSongs = pickN(allSongs, 20);\n            s.prompt = buildPrompt(s.selectedSongs);\n          });\n        }}\n      >\n        {playlist.name}\n      </tr>\n    ));\n    return <table>{rows}</table>;\n  }\n}\n\nfunction pickN(array, n) {\n  let shuffled = shuffle(array);\n  if (shuffled.length > n) {\n    shuffled = shuffled.slice(0, n);\n  }\n  return shuffled;\n}\n\nfunction buildPrompt(songs) {\n  let s =\n    \"Suggest 20 songs similar to these, in the format of a compressed JSON array with entries for artist and title.\\n\";\n  for (const song of songs) {\n    let artist = song.track.artists.map((artist) => artist.name).join(\", \");\n    s += `${song.track.name} - ${artist}\\n  `;\n  }\n  s +=\n    \"Be sure to format the results as a compressed JSON array with entries for artist and title\";\n  return s;\n}\n\nclass Prompt extends Component {\n  constructor() {\n    super();\n    this.state = {\n      expanded: false,\n    };\n  }\n\n  render() {\n    const prompt = State.useState((s) => s.prompt);\n    if (prompt == \"loading playlist\") {\n      return <p>Loading playlist details...</p>;\n    }\n    if (!prompt) {\n      return <p>Choose a playlist first!</p>;\n    }\n\n    const nextSteps = (\n      <p>\n        Paste the prompt into{\" \"}\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chat.openai.com/\">https://chat.openai.com/</a> and copy\n        the result into the box below\n      </p>\n    );\n\n    let promptPre = null;\n    if (this.state.expanded) {\n      promptPre = (\n        <pre\n          style={{\n            maxHeight: \"5em\",\n          }}\n          class=\"mb-2 overflow-scroll\"\n        >\n          {prompt}\n        </pre>\n      );\n    }\n\n    return (\n      <div>\n        <div class=\"mb-2\">\n          <button\n            onClick={() => {\n              this.setState({ expanded: !this.state.expanded });\n            }}\n            class=\"mr-2\"\n          >\n            {this.state.expanded ? \"Hide\" : \"Show\"} prompt\n          </button>\n          <button\n            onClick={() => {\n              copyToClipboard(prompt);\n              this.setState({ copied: true });\n            }}\n            class=\"mr-2\"\n          >\n            Copy to clipboard\n          </button>\n          <button\n            onClick={() => {\n              this.setState({\n                copied: false,\n              });\n            }}\n          >\n            Re-roll sampling\n          </button>\n        </div>\n        {promptPre}\n        {nextSteps}\n      </div>\n    );\n  }\n}\n\nexport class PlaylistSelector extends Component {\n  render() {\n    return (\n      <div>\n        <p class=\"font-bold\">Playlists</p>\n        <PlaylistList />\n        <p class=\"font-bold\">Prompt</p>\n        <Prompt />\n      </div>\n    );\n  }\n}\n", "import { h, Fragment, render, Component } from \"preact\";\nimport { State } from \"./state\";\nimport { fetchPlaylist, spot } from \"./utils\";\n\nSAMPLE_SONGS = `[]\n`;\n\nclass Status extends Component {\n  render() {\n    const spotifyTracksToAdd = State.useState((s) => s.spotifyTracksToAdd);\n    if (!spotifyTracksToAdd) {\n      return <p>nothing to add</p>;\n    }\n\n    let rows = [];\n    for (const item of spotifyTracksToAdd) {\n      if (item.songStatus == \"duplicate\") {\n        rows.push(\n          <tr class=\"text-gray-500\">\n            (already present) {item.title} by {item.artist}\n          </tr>\n        );\n      } else if (item.songStatus == \"not found\") {\n        rows.push(\n          <tr class=\"text-red-400\">\n            (missing) {item.title} by {item.artist}\n          </tr>\n        );\n      } else {\n        rows.push(\n          <tr>\n            {item.title} by {item.artist}\n          </tr>\n        );\n      }\n    }\n\n    return <table>{rows}</table>;\n  }\n}\n\nclass PlaylistLink extends Component {\n  render() {\n    const doneUploading = State.useState((s) => s.doneUploading);\n    const gptPlaylist = State.useState((s) => s.gptPlaylist);\n    if (!gptPlaylist) {\n      return null;\n    }\n    let url = `https://open.spotify.com/playlist/${gptPlaylist.id}`;\n    return (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" class=\"ml-2\" href={url}>\n        View Playlist\n      </a>\n    );\n  }\n}\n\nclass AddSongs extends Component {\n  render() {\n    const validated = State.useState((s) => s.validatedSongsToAdd);\n    if (!validated) {\n      return null;\n    }\n    const spotifyTracksToAdd = State.useState((s) => s.spotifyTracksToAdd);\n    const gptPlaylist = State.useState((s) => s.gptPlaylist);\n    const toAdd = spotifyTracksToAdd.filter((s) => s.songStatus === \"good\");\n    console.log(toAdd);\n\n    return (\n      <button\n        onClick={async () => {\n          let uris = toAdd.map((d) => `spotify:track:${d.result.id}`);\n          await spot(null, `playlists/${gptPlaylist.id}/tracks`, \"POST\", {\n            uris: uris,\n          });\n          State.update((s) => {\n            s.doneUploading = true;\n          });\n          alert(\"Done adding songs! Check your Spotify account\");\n        }}\n        class=\"ml-2\"\n      >\n        Add {toAdd.length} Songs to 'GPT Recs' playlist\n      </button>\n    );\n  }\n}\n\nexport class RecommendConsumer extends Component {\n  async createOrFindGptPlaylist() {\n    const me = await spot(\"me\", \"me\");\n    const playlists = await spot(null, `users/${me.id}/playlists`);\n    for (const playlist of playlists.items) {\n      if (playlist.name === \"GPT Recs\") {\n        return playlist;\n      }\n    }\n\n    let playlist = await spot(null, `users/${me.id}/playlists`, \"POST\", {\n      name: \"GPT Recs\",\n      public: false,\n    });\n    return playlist;\n  }\n  async findExistingIds(playlist) {\n    // const = items = await spot(null, `playlists/${playlist.id}/tracks?limit=100`);\n    const allSongs = await fetchPlaylist(playlist.id, false);\n    console.log(allSongs);\n    let data = {};\n\n    for (const song of allSongs) {\n      data[song.track.id] = true;\n    }\n\n    return data;\n  }\n  async addSongsToGptPlaylist(songs) {\n    let playlist = await this.createOrFindGptPlaylist();\n    State.update((s) => {\n      s.gptPlaylist = playlist;\n    });\n    const existingIds = await this.findExistingIds(playlist);\n\n    State.update((s) => {\n      s.spotifyTracksToAdd = [];\n      update();\n    });\n\n    // async function validated() {\n    //   State.update((s) => {\n    //     console.log(\"set to true\");\n    //     s.validatedSongsT2oAdd = true;\n    //   });\n    // }\n\n    async function update() {\n      for (const song of songs) {\n        const title = song.title || song.name || song.track;\n        const artist = song.artist || song.artists;\n        let artists = artist.split(\",\").map((a) => a.trim());\n        const query = encodeURI(`${title} ${artists[0]}`);\n        const data = await spot(\n          `song-${artist}-${title}`,\n          `search?type=track&q=${query}&limit=1`\n        );\n\n        const result = data.tracks.items[0];\n        let songStatus = null;\n        if (!result) {\n          songStatus = \"not found\";\n        } else if (existingIds[result.id]) {\n          songStatus = \"duplicate\";\n        } else {\n          songStatus = \"good\";\n        }\n        State.update((s) => {\n          s.spotifyTracksToAdd.push({\n            title: title,\n            artist: artist,\n            songStatus: songStatus,\n            result: result,\n          });\n        });\n        State.update((s) => {\n          s.validatedSongsToAdd = true;\n        });\n      }\n    }\n  }\n  render() {\n    let updateDiv = null;\n    const prompt = State.useState((s) => s.prompt);\n    if (!prompt) {\n      return null;\n    }\n    updateDiv = (\n      <button\n        onClick={() => {\n          this.addSongsToGptPlaylist(this.state.gptSongs);\n        }}\n        disabled={!this.state.gptSongs}\n        class=\"mb-2\"\n      >\n        Validate\n      </button>\n    );\n    return (\n      <div>\n        <p class=\"font-bold\">Upload</p>\n        <input\n          onChange={(v) => {\n            let json = v.target.value;\n            this.setState({\n              gptSongs: JSON.parse(json),\n            });\n          }}\n          placeholder=\"paste the JSON part of ChatGPT's response here\"\n          class=\"mb-2\"\n          type=\"text\"\n        />\n        {updateDiv}\n        <PlaylistLink />\n        <AddSongs />\n        <Status />\n      </div>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["assign", "obj", "props", "i", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "slice", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "vnodeId", "options", "createRef", "current", "Fragment", "Component", "context", "this", "getDomSibling", "childIndex", "indexOf", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "rerenderQueue", "push", "process", "prevDebounce", "debounceRendering", "setTimeout", "queue", "__r", "sort", "a", "b", "some", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "__P", "diff", "ownerSVGElement", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "EMPTY_ARR", "oldChildrenLength", "Array", "isArray", "EMPTY_OBJ", "reorderChildren", "placeChild", "unmount", "applyRef", "tmp", "toChildArray", "out", "nextDom", "sibDom", "outer", "appendChild", "nextSibling", "insertBefore", "diffProps", "dom", "newProps", "oldProps", "hydrate", "setProperty", "setStyle", "style", "value", "IS_NON_DIMENSIONAL", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "l", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "event", "newVNode", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "newType", "contextType", "__E", "prototype", "render", "doRender", "sub", "state", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "diffElementNodes", "diffed", "root", "cb", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "dangerouslySetInnerHTML", "attributes", "__html", "innerHTML", "checked", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "firstChild", "cloneElement", "createContext", "defaultValue", "contextId", "Consumer", "contextValue", "Provider", "subs", "ctx", "_props", "old", "splice", "isValidElement", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "update", "callback", "s", "forceUpdate", "a", "b", "i", "getHookState", "index", "type", "options", "__h", "currentComponent", "currentHook", "hooks", "__H", "__", "length", "push", "__V", "EMPTY", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "__c", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "prevScu", "shouldComponentUpdate", "p", "s", "c", "stateHooks", "filter", "x", "every", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useId", "root", "__v", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "invokeCleanup", "invokeEffect", "e", "__e", "afterNextFrame", "raf", "done", "clearTimeout", "timeout", "HAS_RAF", "cancelAnimationFrame", "setTimeout", "requestAnimationFrame", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "diffed", "unmount", "__b", "vnode", "commitQueue", "cb", "hasErrored", "assign", "obj", "props", "i", "shallowDiffers", "a", "b", "is", "x", "y", "PureComponent", "p", "this", "memo", "c", "comparer", "shouldUpdate", "nextProps", "ref", "updateRef", "call", "current", "Memoed", "shouldComponentUpdate", "createElement", "displayName", "name", "prototype", "isReactComponent", "forwardRef", "fn", "Forwarded", "clone", "$$typeof", "REACT_FORWARD_SYMBOL", "render", "__f", "detachedClone", "vnode", "detachedParent", "parentDom", "__c", "forEach", "effect", "__H", "__P", "__k", "map", "child", "removeOriginal", "originalParent", "__v", "__e", "insertBefore", "__d", "Suspense", "__u", "_suspenders", "suspended", "component", "__", "__a", "lazy", "loader", "prom", "error", "Lazy", "then", "exports", "default", "e", "SuspenseList", "_next", "_map", "ContextProvider", "getChildContext", "context", "children", "Portal", "_this", "container", "_container", "componentWillUnmount", "_temp", "nodeType", "parentNode", "childNodes", "appendChild", "push", "before", "removeChild", "splice", "indexOf", "createPortal", "el", "containerInfo", "parent", "callback", "textContent", "preactRender", "hydrate", "preactHydrate", "empty", "isPropagationStopped", "cancelBubble", "isDefaultPrevented", "defaultPrevented", "createFactory", "type", "bind", "isValidElement", "element", "REACT_ELEMENT_TYPE", "cloneElement", "preactCloneElement", "apply", "arguments", "unmountComponentAtNode", "findDOMNode", "base", "Fragment", "startTransition", "cb", "useDeferredValue", "val", "useTransition", "useLayoutEffect", "useSyncExternalStore", "subscribe", "getSnapshot", "value", "_useState", "useState", "_instance", "_getSnapshot", "forceUpdate", "useEffect", "oldDiffHook", "mapFn", "Children", "oldCatchError", "oldUnmount", "resolve", "CAMEL_PROPS", "IS_DOM", "onChangeInputType", "oldEventHook", "currentComponent", "classNameDescriptor", "oldVNodeHook", "oldBeforeRender", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "unstable_batchedUpdates", "flushSync", "StrictMode", "useInsertionEffect", "index", "Component", "isPureReactComponent", "state", "options", "__b", "Symbol", "for", "toChildArray", "count", "length", "only", "normalized", "toArray", "newVNode", "oldVNode", "errorInfo", "unmount", "__R", "__h", "promise", "suspendingVNode", "suspendingComponent", "resolved", "onResolved", "onSuspensionComplete", "suspendedVNode", "setState", "pop", "wasHydrating", "document", "detachedComponent", "__O", "fallback", "list", "node", "delete", "revealOrder", "size", "delegated", "get", "unsuspend", "wrappedUnsuspend", "Map", "reverse", "set", "componentDidUpdate", "componentDidMount", "test", "key", "Object", "defineProperty", "configurable", "v", "writable", "event", "persist", "nativeEvent", "class", "normalizedProps", "nonCustomElement", "toLowerCase", "replace", "multiple", "Array", "isArray", "selected", "defaultValue", "className", "enumerable", "__r", "ReactCurrentDispatcher", "readContext", "__n", "arg", "useId", "useReducer", "useRef", "useImperativeHandle", "useMemo", "useCallback", "useContext", "useDebugValue", "version", "createContext", "createRef", "die", "error", "args", "e", "errors", "msg", "apply", "Error", "length", "map", "s", "join", "isDraft", "value", "DRAFT_STATE", "isDraftable", "proto", "Object", "getPrototypeOf", "Ctor", "hasOwnProperty", "call", "constructor", "Function", "toString", "objectCtorString", "Array", "isArray", "DRAFTABLE", "_value$constructor", "isMap", "isSet", "each", "obj", "iter", "enumerableOnly", "getArchtype", "keys", "ownKeys", "forEach", "key", "entry", "index", "thing", "state", "type_", "has", "prop", "prototype", "get", "set", "propOrOldValue", "t", "add", "is", "x", "y", "target", "hasMap", "Map", "hasSet", "Set", "latest", "copy_", "base_", "shallowCopy", "base", "slice", "descriptors", "getOwnPropertyDescriptors", "i", "desc", "writable", "configurable", "enumerable", "create", "freeze", "deep", "isFrozen", "clear", "delete", "dontMutateFrozenCollections", "getPlugin", "pluginKey", "plugin", "plugins", "loadPlugin", "implementation", "getCurrentScope", "currentScope", "usePatchesInScope", "scope", "patchListener", "patches_", "inversePatches_", "patchListener_", "revokeScope", "leaveScope", "drafts_", "revokeDraft", "parent_", "enterScope", "immer", "immer_", "canAutoFreeze_", "unfinalizedDrafts_", "draft", "revoke_", "revoked_", "processResult", "result", "baseDraft", "isReplaced", "useProxies_", "willFinalizeES5_", "modified_", "finalize", "maybeFreeze", "generateReplacementPatches_", "NOTHING", "undefined", "rootScope", "path", "childValue", "finalizeProperty", "scope_", "finalized_", "draft_", "resultEach", "generatePatches_", "parentState", "targetObject", "rootPath", "targetIsSet", "res", "assigned_", "concat", "autoFreeze_", "peek", "getDescriptorFromProto", "source", "getOwnPropertyDescriptor", "markChanged", "prepareCopy", "createProxy", "parent", "proxyMap_", "proxySet_", "isManual_", "traps", "objectTraps", "arrayTraps", "Proxy", "revocable", "revoke", "proxy", "createES5Proxy_", "push", "current", "currentImpl", "copy", "archType", "hasChanges_", "copyHelper", "from", "enablePatches", "deepClonePatchValue", "entries", "n", "cloned", "immerable", "clonePatchValueIfNeeded", "ADD", "applyPatches_", "patches", "patch", "op", "parentType", "p", "type", "splice", "basePath", "inversePatches", "assignedValue", "origValue", "a", "unshift", "baseValue", "replacement", "hasSymbol", "hasProxies", "Immer", "produce", "produceWithPatches", "setAutoFreeze", "setUseProxies", "applyPatches", "createDraft", "finishDraft", "Symbol", "Reflect", "for", "G", "data", "getOwnPropertySymbols", "getOwnPropertyNames", "_desc$get", "currentState", "Number", "isNaN", "deleteProperty", "owner", "defineProperty", "setPrototypeOf", "fn", "arguments", "this", "parseInt", "config", "recipe", "defaultBase", "self", "_this", "_this2", "hasError", "Promise", "then", "ip", "nextState", "useProxies", "autoFreeze", "applyPatchesImpl", "bind", "_", "p", "h", "update", "isEqual", "cn", "s", "fn", "pn", "T", "f", "EAsyncEndTags", "EPostActionContext", "EAsyncActionInjectType", "i", "response", "import_state", "Auth", "s", "i", "import_state", "import_state", "s", "n", "artist", "prompt", "import_state", "s", "d", "playlist", "update", "a", "prompt", "v", "s", "Auth"]
}
